{
  "React Component": {
    "prefix": "rc",
    "body": [
      "import React, { Component } from 'react';",
      "",
      "interface ${1:App}Props {}",
      "interface ${1:App}State {}",
      "",
      "class ${1:App} extends Component<${1:App}Props, ${1:App}State> {",
      "\tpublic static defaultProps = {};",
      "",
      "\tconstructor(props: ${1:App}Props) {",
      "\t\tsuper(props);",
      "",
      "\t\tthis.state = {};",
      "\t}",
      "",
      "\tpublic render() {",
      "\t\treturn (",
      "\t\t\t${2:<div>App</div>}",
      "\t\t);",
      "\t}",
      "}",
      "",
      "export default ${1:App};",
      ""
    ]
  },
  "React PureComponent": {
    "prefix": "rcpure",
    "body": [
      "import React, { PureComponent } from 'react';",
      "",
      "interface ${1:App}Props {}",
      "interface ${1:App}State {}",
      "",
      "class ${1:App} extends PureComponent<${1:App}Props, ${1:App}State> {",
      "\tpublic static defaultProps = {};",
      "",
      "\tconstructor(props: ${1:App}Props) {",
      "\t\tsuper(props);",
      "",
      "\t\tthis.state = {};",
      "\t}",
      "",
      "\tpublic render() {",
      "\t\treturn (",
      "\t\t\t${2:<div>App</div>}",
      "\t\t);",
      "\t}",
      "}",
      "",
      "export default ${1:App};",
      ""
    ]
  },
  "React Functional Component": {
    "prefix": "rcfunc",
    "body": [
      "import React from 'react';",
      "",
      "interface ${1:App}Props {}",
      "",
      "const ${1:App}: React.FC<${1:App}Props> = ({ children }) => {",
      "  return <div>{children}</div>;",
      "};",
      "",
      "${1:App}.defaultProps = {};",
      "",
      "export default ${1:App};",
      ""
    ]
  },
  "React Constructor": {
    "prefix": "ctor",
    "body": [
      "constructor(props: ${1:App}Props) {",
      "\tsuper(props);",
      "",
      "\tthis.state = {",
      "\t\t${2}",
      "\t};",
      "}"
    ]
  },
  "React Lifecycle DidMount": {
    "prefix": "didMount",
    "body": ["public componentDidMount() {", "\t${1}", "}"]
  },
  "React Lifecycle DerivedState From Props": {
    "prefix": "derivedProps",
    "body": [
      "public static getDerivedStateFromProps(props: ${1:App}Props, state: ${1:App}State): Partial<${1:App}State> | null {",
      "\t${2}",
      "}"
    ]
  },
  "React Lifecycle DerivedState From Error": {
    "prefix": "derivedError",
    "body": [
      "public static getDerivedStateFromError(error: any) {",
      "\t${2}",
      "}"
    ]
  },
  "React Lifecycle ShouldUpdate": {
    "prefix": "shouldUpdate",
    "body": [
      "public shouldComponentUpdate(nextProps: ${1:App}Props, nextState: ${1:App}State) {",
      "\t${2:return false;}",
      "}"
    ]
  },
  "React Lifecycle BeforeUpdate": {
    "prefix": "beforeUpdate",
    "body": [
      "public getSnapshotBeforeUpdate(prevProps: ${1:App}Props, prevState: ${1:App}State) {",
      "\t${2}",
      "}"
    ]
  },
  "React Lifecycle DidUpdate": {
    "prefix": "didUpdate",
    "body": [
      "public componentDidUpdate(prevProps: ${1:App}Props, prevState: ${1:App}State) {",
      "\t${2}",
      "}"
    ]
  },
  "React Lifecycle WillUnmount": {
    "prefix": "willUnmount",
    "body": ["public componentWillUnmount() {", "\t${1}", "}"]
  },
  "React Lifecycle DidCatch": {
    "prefix": "didCatch",
    "body": [
      "public componentDidCatch(error: Error | null, info: any) {",
      "\t${1}",
      "}"
    ]
  }
}
